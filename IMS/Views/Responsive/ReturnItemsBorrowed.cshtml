


<script>
    function onRequestEnd(e) {
        //Check request type 
        if (e.type == "create" || e.type == "update" || e.type == "destroy") {
            //check for errors in the response
            if (e.response == null || e.response.Errors == null) {
                var officeid = $("#Office").val(); 
                $("#paid").data("kendoGrid").dataSource.read({ officeid: officeid });
                $("#unpaid").data("kendoGrid").dataSource.read({ officeid: officeid });
            }
        }
        else {
            e.preventDefault();
        }
    }
    function viewItems(a) {
        var dataItem = this.dataItem($(a.currentTarget).closest("tr"));
        var controlno = dataItem.controlno;
       

        $('#modal-view-ris').modal('toggle');
        document.getElementById("riscode").textContent = controlno;

        $.get("@Url.Content("~/Responsive/gettotalamount")", { "controlno": controlno }, function (r) {
            document.getElementById("amount").textContent = "Total Amount :  ₱" + r;
        })

        $('#approved_items').data('kendoGrid').dataSource.read({ controlno: controlno })
    }
    function obr(a) {
        alert(a);
    }
    function load_emp() {
        var officeid = $("#Office").val();
       //  alert(officeid);
        $("#paid").data("kendoGrid").dataSource.read({ officeid: officeid });
        $("#unpaid").data("kendoGrid").dataSource.read({ officeid: officeid });
     //  $("#byoffemployee").data("kendoComboBox").dataSource.read({ officeid: officeid });
       // $("#borrowedItems").data("kendoGrid").dataSource.read({ officeid: officeid });

    }
    function view(officeid,controlno ) {
        $('#modal-view').modal('toggle');
        document.getElementById("officeid").value = officeid;
        document.getElementById("controlno").value = controlno;
        document.getElementById("headerControlno").textContent = "Items ("+controlno+")";
        $("#itempercontrolno").data("kendoGrid").dataSource.read({ officeid: officeid,controlno: controlno });
    }
    function pay(itemid, itemname, quantity, transcode, unit, officeid, id, rprice, controlno, recieve_quantity)
    {
        
        if (quantity == recieve_quantity)
        {
            swal({ title: "Already Paid!", text: "", type: "warning" })
            return;
        }
        if ($("#byoffemployee").val() == null || $("#byoffemployee").val() == "")
        {
            swal({ title: "Please select employee!", text: "", type: "warning" })
            return;
        }


        var remain = quantity - recieve_quantity;
        swal({
            title: "Enter Quantity to Pay for " + itemname + "(" + remain + " " + unit + ")",
            text: "",
            type: "input",
            inputType: "number",
            inputValue: remain,
            showCancelButton: true,
            closeOnConfirm: false,
            animation: "slide-from-top",
            inputPlaceholder: "Enter Quantity"
        },
    function (inputValue) {
    if (inputValue === false) return false;

    if (inputValue === "" || inputValue > remain || inputValue <= 0 )
    {
        swal.showInputError("You enter an invalid quantity!");
        return false
    }
         swal({ title: "Are you sure? " , text:"Proceed" ,type: "warning", showCancelButton: true, confirmButtonColor: "#DD6B55", confirmButtonText: "Yes", showLoaderOnConfirm: true, closeOnConfirm: false }, function (isConfirm) {
             if (isConfirm)
             { 
                 $.post("@Url.Content("~/Responsive/pay")", { "itemid": itemid, "itemname": itemname, "quantity": inputValue, "transcode": transcode, "unit": unit, "officeid": $("#Office").val(), "id": id, "price": rprice, "controlno": controlno, "borrower_eid": $("#byoffemployee").val() }, function (r) {
                     if(r == "1")
                     {
                         $(".my_audio").trigger('play');
                         $(".sweet-overlay, .sweet-alert").remove();
                         swal("Paid!", "", "success");
                         $("#borrowedItems").data("kendoGrid").dataSource.read({ officeid: $("#Office").val() });
                         // $("#ris").data("kendoGrid").dataSource.read();
                        // $("#itempercontrolno").data("kendoGrid").dataSource.read({ officeid: officeid, controlno: controlno });
                     }
                     else
                     {
                         $(".sweet-overlay, .sweet-alert").remove();
                         swal("Opps ",r, "success");
                     }
                 })
             }
             else
             {
                 $(".sweet-overlay, .sweet-alert").remove();
             }
         });
     }); 
    }
</script>



<div class="row">
    <div class="col-lg-12">
        <div class="wrapper wrapper-content animated fadeInRight">
            <div class="row">
                 
                <div class="col-lg-12">
                    <div class="ibox  float-e-margins">
                        <div class="ibox-content">
                            <div class="ibox-content" style="display:block">
                                <div class="col row">
                                  
                                    <div class="col-lg-12 col-sm-12 col-md-12" style="margin-bottom:5px">
                                        <label>Office</label>
                                        @(Html.Kendo().ComboBox()
                                        .Name("Office")
                                        .DataTextField("OfficeName")
                                        .DataValueField("OfficeID")
                                        .Placeholder("Office...")
                                        .HtmlAttributes(new { @style = "width: 25%" })
                                        .Filter("contains")
                                        .AutoBind(true)
                                        .MinLength(2)
                                        .DataSource(source => source.Read(read => read.Action("OfficeNew", "Responsive")))
                                        .Events(e => e.Change("load_emp"))
                                        )
                                    </div>

                                    <div class="col-lg-6 col-sm-6 col-md-6" style="margin-bottom:50px">

                                        <h3>Without OBR</h3>

                                        @(Html.Kendo().Grid<IMS.Models.item>()
                                            .Name("unpaid")
                                            .Columns(columns =>
                                            {
                                                columns.Bound("preparation_id").Hidden();
                                                columns.Bound("officeid").Hidden();
                                                columns.Bound("controlno").Title("Ris Id");
                                                columns.Bound("rprice").Title("Amount").Format("{0:N2}");
                                                columns.Bound("obr").Title("OBR");
                                                //columns.Bound("receive").Title("").ClientTemplate(" <button   class=\"btn btn-xs btn-primary \" onclick = \'viewItems(\"#:controlno#\")\' >View</button>  <button   class=\"btn btn-xs btn-info k-grid-edit \" onclick = \'obr(\"#:controlno#\")\' >OBR</button>  ").HtmlAttributes(new { style = "width:100px" });
                                                columns.Command(command => 
                                                {
                                                    command.Custom("View").Click("viewItems");
                                                    command.Edit().Text("OBR").HtmlAttributes(new { @class = "btn btn-xs btn-primary" });
                                                
                                                }).Width(200);
                                                })
                                                     .Editable(editable => editable.Mode(GridEditMode.InLine))
                                                      .Pageable()
                                                      .AutoBind(true)
                                                      .Selectable()
                                                      .HtmlAttributes(new { style = "width:100%;height:auto;overflow-x:scroll" })
                                                      .DataSource(dataSource => dataSource
                                                      .Ajax()
                                                      .ServerOperation(false)
                                                      .Model(model =>
                                                        {
                                                            model.Id(p => p.preparation_id);
                                                            model.Field(p => p.officeid).Editable(false);
                                                            model.Field(p => p.controlno).Editable(false);
                                                            model.Field(p => p.rprice).Editable(false);
                                                            model.Field(p => p.obr).Editable(true);
                                                        })
                                                      .PageSize(30)
                                                      .Sort(a => a.Add("risid"))
                                                      .Read(read => read.Action("GetRisListAndAmountWithObr1", "Responsive"))
                                                    .Update(update => update.Action("UpdateOBR", "Responsive"))
                                                 .Events(e => e.RequestEnd("onRequestEnd"))
                                                              )
                                        )

                                    </div> 

                                    <div class="col-lg-6 col-sm-6 col-md-6" style="margin-bottom:50px">
                                        <h3>With OBR</h3>
                                        @(Html.Kendo().Grid<IMS.Models.item>()
                                            .Name("paid")
                                            .Columns(columns =>
                                            {
                                                columns.Bound("preparation_id").Hidden();
                                                columns.Bound("officeid").Hidden();
                                                columns.Bound("controlno").Title("Ris Id");
                                                columns.Bound("rprice").Title("Amount").Format("{0:N2}");
                                                columns.Bound("obr").Title("OBR");
                                                //columns.Bound("receive").Title("").ClientTemplate(" <button   class=\"btn btn-xs btn-primary \" onclick = \'viewItems(\"#:controlno#\")\' >View</button>  <button   class=\"btn btn-xs btn-info k-grid-edit \" onclick = \'obr(\"#:controlno#\")\' >OBR</button>  ").HtmlAttributes(new { style = "width:100px" });
                                                columns.Command(command =>
                                                {
                                                    command.Custom("View").Click("viewItems");
                                                    command.Edit().Text("OBR").HtmlAttributes(new { @class = "btn btn-xs btn-primary" });

                                                }).Width(200);
                                            })
                                                     .Editable(editable => editable.Mode(GridEditMode.InLine))
                                                      .Pageable()
                                                      .AutoBind(true)
                                                      .Selectable()
                                                      .HtmlAttributes(new { style = "width:100%;height:auto;overflow-x:scroll" })
                                                      .DataSource(dataSource => dataSource
                                                      .Ajax()
                                                      .ServerOperation(false)
                                                      .Model(model =>
                                                        {
                                                            model.Id(p => p.preparation_id);
                                                            model.Field(p => p.officeid).Editable(false);
                                                            model.Field(p => p.controlno).Editable(false);
                                                            model.Field(p => p.rprice).Editable(false);
                                                            model.Field(p => p.obr).Editable(true);
                                                        })
                                                      .PageSize(30)
                                                      .Sort(a => a.Add("risid"))
                                                      .Read(read => read.Action("GetRisListAndAmountWithObr", "Responsive"))
                                                    .Update(update => update.Action("UpdateOBR", "Responsive"))
                                                  .Events(e => e.RequestEnd("onRequestEnd"))
                                                              )
                                        )

                                    </div>
                                     
                                    <div class="col-lg-12 col-sm-12 col-md-12" style="margin-bottom:50px;visibility:hidden">
                                            @(Html.Kendo().Grid<IMS.Models.item>()
                    .Name("borrowedItems")
                    .Columns(columns =>
                    {
                        columns.Bound("itemid").Hidden();
                        columns.Bound("itemname").Title("Item Name");
                        columns.Bound("unit").Title("Unit");
                        columns.Bound("quantity").Title("Quantity");
                        columns.Bound("rprice").Title("Price").Format("{0:N2}");
                        columns.Bound("recieve_quantity").Title("Paid");
                        columns.Bound("receive").Title("View").Width(80).ClientTemplate("#if(true)" +
                          "{#" +
                          "<button class=\"btn btn-xs btn-primary \" onclick = \'pay(#:itemid#,\"#:itemname#\",#:quantity#,\"#:transcode#\",\"#:unit#\",#:officeid#,#:id#,#:rprice#,\"#:controlno#\",#:recieve_quantity#)\' >Pay</button>" +
                          "#}" +
                          "#"
                       );
                    })
                              .Pageable()
                              .AutoBind(true)
                              .Selectable()
                              .HtmlAttributes(new { style = "width:100%;height:auto;overflow-x:scroll" })
                              .DataSource(dataSource => dataSource
                              .Ajax()
                              .ServerOperation(false)
                              .PageSize(30)
                              .Sort(a => a.Add("itemname"))
                              .Read(read => read.Action("getBorrowedItems", "Responsive"))
                                                    // .Events(e => e.RequestEnd("onRequestEnd"))
                                      )
                                            )
                                        </div>

                                    <div class="col-lg-12 col-sm-12 col-md-12" style="margin-bottom:50px;visibility:hidden">
                                        <label>Employee</label>
                                        @(Html.Kendo().ComboBox()
                                            .Name("byoffemployee")
                                            .DataTextField("EmpName")
                                            .DataValueField("eid")
                                            .Placeholder("Search Name here...")
                                            .HtmlAttributes(new { @style = "width:100%" })
                                            .Filter("contains")
                                            .AutoBind(true)
                                            .MinLength(1)
                                            .DataSource(source => source.Read(read => read.Action("getEmp", "Responsive")))
                                        )
                                    </div>

                                        <br>
                                        <br>
                                        <br>
                                        <br>
                                        <br>
                                    </div>
                            </div>
                        </div>
                    </div>
                </div>


            </div>
        </div>
    </div>
</div>

 <div id="modal-view" class="modal fade" aria-hidden="true">
    <div class="modal-dialog" style="width:90%">
        <div class="modal-content">
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-6 col-sm-6 col-md-6">
                        <h3  style="text-align: right"  id="headerControlno"> </h3>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12 col-md-12 col-sm-12">
                        <input type="text" id="controlno" style="visibility:hidden">
                        <input type="text" id="officeid" style="visibility:hidden">
                        @(Html.Kendo().Grid<System.Data.DataRow>()
                                .Name("itempercontrolno")
                                .Columns(columns =>
                                {
                                    columns.Bound("itemid").Hidden();
                                    columns.Bound("officeid").Hidden();
                                    columns.Bound("id").Hidden(); 
                                    columns.Bound("itemname").Title("Item Name").Width(300); 
                                    columns.Bound("quantity").Title("Quantity").Width(80).Format("{0:N}");
                                    columns.Bound("unit").Title("Unit").Width(80);
                                    columns.Bound("transcode").Title("Transaction Code").Width(80);
                                    columns.Bound("controlno").Title("Control No.").Width(80);
                                    columns.Bound("rprice").Title("Price").Width(80).Format("{0:N2}");
                                    columns.Bound("receive").Title("View").Width(80).ClientTemplate("#if(true)" +
                                       "{#" +
                                            "<button class=\"btn btn-xs btn-primary \" onclick = \"pay(#:itemid#,'#:itemname#',#:quantity#,'#:transcode#','#:unit#',#:officeid#,#:id#,#:rprice#,'#:controlno#')\" >Pay</button>" +
                                       "#}" +
                                       "#"
                                    );
                                })
                                .Pageable()
                                .Selectable()

                                .HtmlAttributes(new { style = "width:100%;height:auto;overflow-x:scroll" })
                                .DataSource(dataSource => dataSource
                                .Ajax()
                                .ServerOperation(false)
                                        .PageSize(10000)
                                .Read(read => read.Action("getItemsPerControlNo", "Responsive"))
                                        )
                        )
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>



<div id="modal-view-ris" class="modal fade" aria-hidden="true">
    <div class="modal-dialog" >
        <div class="modal-content">
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-6 col-sm-6 col-md-6">
                        <h2 id="riscode"> </h2>
                    </div>
                </div>
                <div class="row">  
                    <div class="col-lg-12 col-md-12 col-sm-12">

                        @(Html.Kendo().Grid<System.Data.DataRow>()
                            .Name("approved_items")
                            .Columns(columns =>
                            {    
                                columns.Bound("itemname").Title("Item Name").Width(300);
                                columns.Bound("price").Title("Price").Width(80).Format("{0:N}");
                                columns.Bound("quantity").Title("Quantity").Width(80).Format("{0:N}");
                                columns.Bound("unit").Title("Unit").Width(80); 
                            })
                            .Pageable() 
                            .HtmlAttributes(new { style = "width:100%;height:auto;overflow-x:scroll" })
                            .DataSource(dataSource => dataSource
                            .Ajax()
                            .ServerOperation(false)
                            .PageSize(10000)
                            .Read(read => read.Action("paymenyGetItems", "Responsive"))
                            )
                        )


                        <br>

                        <h2 style="text-align:right" id="amount" > </h2>
                    </div>
                   
                </div>
            </div>
        </div>
    </div>
</div>

<div id="modal-view-ris" class="modal fade" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-6 col-sm-6 col-md-6">
                        <h2 id="riscode"> </h2>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12 col-md-12 col-sm-12">

                        @(Html.Kendo().Grid<System.Data.DataRow>()
                            .Name("approved_items")
                            .Columns(columns =>
                            {
                                columns.Bound("itemname").Title("Item Name").Width(300);
                                columns.Bound("price").Title("Price").Width(80).Format("{0:N}");
                                columns.Bound("quantity").Title("Quantity").Width(80).Format("{0:N}");
                                columns.Bound("unit").Title("Unit").Width(80);
                            })
                            .Pageable()
                            .HtmlAttributes(new { style = "width:100%;height:auto;overflow-x:scroll" })
                            .DataSource(dataSource => dataSource
                            .Ajax()
                            .ServerOperation(false)
                            .PageSize(10000)
                            .Read(read => read.Action("paymenyGetItems", "Responsive"))
                            )
                        )


                        <br>

                        <h2 style="text-align:right" id="amount"> </h2>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>