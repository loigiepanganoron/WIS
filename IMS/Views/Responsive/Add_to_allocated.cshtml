<script>
    function notify1() {
        swal('', 'Success, proceed to stock viewing to see if items was added. ', 'success');
    }
</script>


<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-3">
            <div class="ibox">
                <div class="ibox-content">
                    <label>What year?</label>
                    <select name="yearpicker1" id="yearpicker1" style="width:100%;height:35px" onclick="year1()"></select>
                </div>
            </div>
        </div>
        <div class="col-lg-3">
            <div class="ibox-content">
                <label>Select Transaction Number</label>

                @(Html.Kendo().ComboBox()
        .Name("tcode")
        .DataTextField("transno")
        .DataValueField("cyear")
        .Placeholder("Search...")
        .HtmlAttributes(new { @style = "width:100%;height:28px" })
        .Filter("contains")
        .AutoBind(false)
        .MinLength(1)
                .DataSource(source => source.Read(read => read.Action("apr_bb", "Responsive")))
                .Events(e => e.Change("loadgrid"))
                )
            </div>

        </div>
        <div class="col-lg-3">
            <div class="ibox-content">
                <h2> Add to Allocated per Office</h2>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox">
                <div class="ibox-content">
                    @(Html.Kendo().Grid<IMS.Models.item>()
                    .Name("allocated_items")
                    .Columns(columns =>
                    {
                        columns.Bound("itemid").Title("").Hidden();
                        columns.Bound("itemname").Title("Itemname").Width(250);
                        columns.Bound("unitcost").Title("Unit cost").Width(100);
                        columns.Bound("iquantity").Title("Quantity").Width(100);
                        columns.Bound("quantity").Title("IN").Width(100);
                        columns.Bound("unit").Title("Unit").Width(70);
                    })
                                    .ToolBar(toolbar =>
                                    {
                                        toolbar.Save();
                                    })
                            .Editable(editable => editable.Mode(GridEditMode.InCell))
                              .Pageable()

                              .Selectable()
                              .Events(e => e.SaveChanges("notify"))
                              .HtmlAttributes(new { style = "width:100%;height:auto;overflow-x:scroll" })
                              .DataSource(dataSource => dataSource
                              .Ajax()
                              .Batch(true)
                              .ServerOperation(false)
                              .Model(model =>
            {
                model.Id(p => p.itemid);
                model.Field(p => p.itemname).Editable(false);
                model.Field(p => p.unitcost).Editable(false);
                model.Field(p => p.iquantity).Editable(false);
                model.Field(p => p.unit).Editable(false);

            })
                              .ServerOperation(false)
                              .PageSize(10)
                              .Read(read => read.Action("getitems", "Responsive"))
                              .Update(read => read.Action("add_to_allocated", "Responsive"))
                              .Sort(a => a.Add("itemname").Ascending())

                              )
                    )
                </div>

            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        for (i = new Date().getFullYear() ; i > 1900; i--) {
            $('#yearpicker1').append($('<option />').val(i).html(i));
        }
    })
    $(document).ready(function () {
        var year = $('#yearpicker1').val();
        $("#tcode").data("kendoComboBox").dataSource.read({ year: year });
    })
</script>
<script>
    function year1() {
        var year = $('#yearpicker1').val();
        $("#tcode").data("kendoComboBox").dataSource.read({ year: year });
    }
    function loadgrid() {
        var selection = this.select();
        var rowData = this.dataItem(selection);
        var code = rowData.transno;

        $("#allocated_items").data("kendoGrid").dataSource.read({ transno: code });
    }


</script>

<style>
    .highlighted-row {
        background-color: red;
        color: white;
    }

    .nm {
        font-size: 15px;
        margin-left: 4px;
    }

    .k-grid-edit-row > td > .text-box {
        width: 100%;
        color: black;
    }
    /*#btn-sub {
            background-color: #1fa67a;
            border-radius: 5px;
            color: white;
            font-family: Verdana, Geneva, Tahoma, sans-serif;
            font-size: 12px;
            text-align: center;
            height: 30px;
            font-weight: normal;
        }*/

    .bk {
        background-color: #f1f9f7;
        border: 1px solid #e0f1e9;
        color: #1d9d74;
        /*border: 5px solid transparent;*/
        border-bottom-left-radius: 4px;
        border-bottom-right-radius: 4px;
    }

    #errmsg {
        color: red;
    }

    .k-grid tbody tr {
        height: 30px;
    }

    .k-grid td {
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    .k-grid table {
        table-layout: fixed;
    }
</style>
