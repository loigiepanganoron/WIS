//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IMS.epsws {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="epsws.serviceSoap")]
    public interface serviceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PODetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable PODetails(string pono);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PODetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> PODetailsAsync(string pono);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/POItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable POItems(int officeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/POItems", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> POItemsAsync(int officeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/POItem_hospital", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable POItem_hospital(int poid, int itemid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/POItem_hospital", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> POItem_hospitalAsync(int poid, int itemid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/POItems_hospital", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable POItems_hospital(int poid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/POItems_hospital", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> POItems_hospitalAsync(int poid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PPMPAmount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        double PPMPAmount(int year, int officeid, int programid, int accountid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PPMPAmount", ReplyAction="*")]
        System.Threading.Tasks.Task<double> PPMPAmountAsync(int year, int officeid, int programid, int accountid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PPMPItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable PPMPItems(int year, int officeid, int programid, int accountid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PPMPItems", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> PPMPItemsAsync(int year, int officeid, int programid, int accountid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PPMPLumpsum", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable PPMPLumpsum(int year, int officeid, int programid, int accountid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PPMPLumpsum", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> PPMPLumpsumAsync(int year, int officeid, int programid, int accountid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PPMPNonOffice", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable PPMPNonOffice(int year, int officeid, int accountid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PPMPNonOffice", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> PPMPNonOfficeAsync(int year, int officeid, int accountid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTransactions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetTransactions(int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTransactions", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetTransactionsAsync(int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetItems(string transno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetItems", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetItemsAsync(string transno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AllPPMPItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable AllPPMPItems(int officeid, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AllPPMPItems", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> AllPPMPItemsAsync(int officeid, int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetKey", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetKey(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetKey", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetKeyAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Items", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable Items();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Items", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> ItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Hospital_items", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable Hospital_items();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Hospital_items", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> Hospital_itemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AllItems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable AllItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AllItems", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> AllItemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveBarcode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        int SaveBarcode(int itemid, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveBarcode", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SaveBarcodeAsync(int itemid, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetItem", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetItem(string barcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetItem", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetItemAsync(string barcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPRStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetPRStatus(int prid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPRStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetPRStatusAsync(int prid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPR", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetPR(int officeid, int cyear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPR", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetPRAsync(int officeid, int cyear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PRStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PRStatus(int prid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PRStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PRStatusAsync(int prid);
        
        // CODEGEN: Parameter 'bytes' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUpdates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IMS.epsws.GetUpdatesResponse GetUpdates(IMS.epsws.GetUpdatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUpdates", ReplyAction="*")]
        System.Threading.Tasks.Task<IMS.epsws.GetUpdatesResponse> GetUpdatesAsync(IMS.epsws.GetUpdatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SaveDocument(int officeid, string subject, int eid, string uniquerefno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SaveDocument", ReplyAction="*")]
        System.Threading.Tasks.Task SaveDocumentAsync(int officeid, string subject, int eid, string uniquerefno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPRStatusdate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetPRStatusdate(int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPRStatusdate", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetPRStatusdateAsync(int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PPMPUtilization", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable PPMPUtilization(int cyear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PPMPUtilization", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> PPMPUtilizationAsync(int cyear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransmittalAction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable TransmittalAction(int officeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransmittalAction", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> TransmittalActionAsync(int officeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NewTransmittal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable NewTransmittal(int trailid, int officeid, int eid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/NewTransmittal", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> NewTransmittalAsync(int trailid, int officeid, int eid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddTransmittalTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable AddTransmittalTransaction(int transid, string uniquerefno, int poid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddTransmittalTransaction", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> AddTransmittalTransactionAsync(int transid, string uniquerefno, int poid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteTransmittalTransaction", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DeleteTransmittalTransaction(int transdetailsid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteTransmittalTransaction", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DeleteTransmittalTransactionAsync(int transdetailsid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendTransmittal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SendTransmittal(int transid, int eid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SendTransmittal", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SendTransmittalAsync(int transid, int eid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ViewTransmittal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable ViewTransmittal(string transactionno, int officeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ViewTransmittal", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> ViewTransmittalAsync(string transactionno, int officeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ViewTransmittalTransactions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable ViewTransmittalTransactions(string transid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ViewTransmittalTransactions", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> ViewTransmittalTransactionsAsync(string transid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveTransmittal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string ReceiveTransmittal(int transid, string eid, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceiveTransmittal", ReplyAction="*")]
        System.Threading.Tasks.Task<string> ReceiveTransmittalAsync(int transid, string eid, string data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ViewTransmittalInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet ViewTransmittalInfo(string transactionno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ViewTransmittalInfo", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> ViewTransmittalInfoAsync(string transactionno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceivedTransmittal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable ReceivedTransmittal(int officeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ReceivedTransmittal", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> ReceivedTransmittalAsync(int officeid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateTransactionRemarks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateTransactionRemarks(int transdetailsid, string remarks, int eid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateTransactionRemarks", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateTransactionRemarksAsync(int transdetailsid, string remarks, int eid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckSent", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CheckSent(string transactionno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CheckSent", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CheckSentAsync(string transactionno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancelTransmittal", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CancelTransmittal(int transid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CancelTransmittal", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CancelTransmittalAsync(int transid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOffices", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetOffices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOffices", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetOfficesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOfficePR", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetOfficePR(int officeid, int cyear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOfficePR", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetOfficePRAsync(int officeid, int cyear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOfficePrLot", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetOfficePrLot(int prid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOfficePrLot", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetOfficePrLotAsync(int prid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPRDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet GetPRDetails(int prid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPRDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetPRDetailsAsync(int prid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPRLotDetails", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetPRLotDetails(int prid, int lot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetPRLotDetails", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetPRLotDetailsAsync(int prid, int lot);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddBidderToPR", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AddBidderToPR(int prid, int supplierid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddBidderToPR", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AddBidderToPRAsync(int prid, int supplierid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BidDocs", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable BidDocs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/BidDocs", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> BidDocsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PostQuaPR", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable PostQuaPR();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PostQuaPR", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> PostQuaPRAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSuppliers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetSuppliers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetSuppliers", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetSuppliersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetSupplierID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string SetSupplierID(int epssupplierid, int aomssupplierid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetSupplierID", ReplyAction="*")]
        System.Threading.Tasks.Task<string> SetSupplierIDAsync(int epssupplierid, int aomssupplierid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SupplierPO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable SupplierPO();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SupplierPO", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> SupplierPOAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PPMPRating", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable PPMPRating(int cyear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PPMPRating", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> PPMPRatingAsync(int cyear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateStatusTracking", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateStatusTracking(int id, System.DateTime date, string dvno, string obrno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateStatusTracking", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateStatusTrackingAsync(int id, System.DateTime date, string dvno, string obrno);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateStatusCafoa", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void UpdateStatusCafoa(string po);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateStatusCafoa", ReplyAction="*")]
        System.Threading.Tasks.Task UpdateStatusCafoaAsync(string po);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUndeliveredPO", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetUndeliveredPO(int supplierid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetUndeliveredPO", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetUndeliveredPOAsync(int supplierid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/pritems", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable pritems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/pritems", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> pritemsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateitemchartcode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string updateitemchartcode(int itemid, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateitemchartcode", ReplyAction="*")]
        System.Threading.Tasks.Task<string> updateitemchartcodeAsync(int itemid, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PriceBulletin", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable PriceBulletin();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PriceBulletin", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> PriceBulletinAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItemCategory", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable ItemCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ItemCategory", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> ItemCategoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateCategoryAccountCode", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string updateCategoryAccountCode(int itemgroupid, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateCategoryAccountCode", ReplyAction="*")]
        System.Threading.Tasks.Task<string> updateCategoryAccountCodeAsync(int itemgroupid, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllPRByYear", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetAllPRByYear(int cyear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllPRByYear", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllPRByYearAsync(int cyear);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllSupplier", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetAllSupplier(int supplierid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllSupplier", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllSupplierAsync(int supplierid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTananSupplier", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetTananSupplier();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetTananSupplier", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetTananSupplierAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllFund", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetAllFund();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllFund", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllFundAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllUnit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetAllUnit();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetAllUnit", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetAllUnitAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CopyLatestDoc", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CopyLatestDoc(int doc_id, int sig_id, int sig_eid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CopyLatestDoc", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CopyLatestDocAsync(int doc_id, int sig_id, int sig_eid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateDocRouteDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string updateDocRouteDate(int doc_id, int sig_id, int sig_eid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/updateDocRouteDate", ReplyAction="*")]
        System.Threading.Tasks.Task<string> updateDocRouteDateAsync(int doc_id, int sig_id, int sig_eid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddAttendance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string AddAttendance(string swipeid, int iscompany, string attendee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddAttendance", ReplyAction="*")]
        System.Threading.Tasks.Task<string> AddAttendanceAsync(string swipeid, int iscompany, string attendee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDocRoute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable GetDocRoute(string funds, string ttype, double amount, string mode, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetDocRoute", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetDocRouteAsync(string funds, string ttype, double amount, string mode, string branch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PO_hospital", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable PO_hospital();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PO_hospital", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> PO_hospitalAsync();
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUpdates", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetUpdatesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string contentType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] bytes;
        
        public GetUpdatesRequest() {
        }
        
        public GetUpdatesRequest(string fileName, string contentType, byte[] bytes) {
            this.fileName = fileName;
            this.contentType = contentType;
            this.bytes = bytes;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUpdatesResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetUpdatesResponse {
        
        public GetUpdatesResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface serviceSoapChannel : IMS.epsws.serviceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class serviceSoapClient : System.ServiceModel.ClientBase<IMS.epsws.serviceSoap>, IMS.epsws.serviceSoap {
        
        public serviceSoapClient() {
        }
        
        public serviceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public serviceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public serviceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public serviceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable PODetails(string pono) {
            return base.Channel.PODetails(pono);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> PODetailsAsync(string pono) {
            return base.Channel.PODetailsAsync(pono);
        }
        
        public System.Data.DataTable POItems(int officeid) {
            return base.Channel.POItems(officeid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> POItemsAsync(int officeid) {
            return base.Channel.POItemsAsync(officeid);
        }
        
        public System.Data.DataTable POItem_hospital(int poid, int itemid) {
            return base.Channel.POItem_hospital(poid, itemid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> POItem_hospitalAsync(int poid, int itemid) {
            return base.Channel.POItem_hospitalAsync(poid, itemid);
        }
        
        public System.Data.DataTable POItems_hospital(int poid) {
            return base.Channel.POItems_hospital(poid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> POItems_hospitalAsync(int poid) {
            return base.Channel.POItems_hospitalAsync(poid);
        }
        
        public double PPMPAmount(int year, int officeid, int programid, int accountid) {
            return base.Channel.PPMPAmount(year, officeid, programid, accountid);
        }
        
        public System.Threading.Tasks.Task<double> PPMPAmountAsync(int year, int officeid, int programid, int accountid) {
            return base.Channel.PPMPAmountAsync(year, officeid, programid, accountid);
        }
        
        public System.Data.DataTable PPMPItems(int year, int officeid, int programid, int accountid) {
            return base.Channel.PPMPItems(year, officeid, programid, accountid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> PPMPItemsAsync(int year, int officeid, int programid, int accountid) {
            return base.Channel.PPMPItemsAsync(year, officeid, programid, accountid);
        }
        
        public System.Data.DataTable PPMPLumpsum(int year, int officeid, int programid, int accountid) {
            return base.Channel.PPMPLumpsum(year, officeid, programid, accountid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> PPMPLumpsumAsync(int year, int officeid, int programid, int accountid) {
            return base.Channel.PPMPLumpsumAsync(year, officeid, programid, accountid);
        }
        
        public System.Data.DataTable PPMPNonOffice(int year, int officeid, int accountid) {
            return base.Channel.PPMPNonOffice(year, officeid, accountid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> PPMPNonOfficeAsync(int year, int officeid, int accountid) {
            return base.Channel.PPMPNonOfficeAsync(year, officeid, accountid);
        }
        
        public System.Data.DataTable GetTransactions(int year) {
            return base.Channel.GetTransactions(year);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetTransactionsAsync(int year) {
            return base.Channel.GetTransactionsAsync(year);
        }
        
        public System.Data.DataTable GetItems(string transno) {
            return base.Channel.GetItems(transno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetItemsAsync(string transno) {
            return base.Channel.GetItemsAsync(transno);
        }
        
        public System.Data.DataTable AllPPMPItems(int officeid, int year) {
            return base.Channel.AllPPMPItems(officeid, year);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> AllPPMPItemsAsync(int officeid, int year) {
            return base.Channel.AllPPMPItemsAsync(officeid, year);
        }
        
        public string GetKey(string id) {
            return base.Channel.GetKey(id);
        }
        
        public System.Threading.Tasks.Task<string> GetKeyAsync(string id) {
            return base.Channel.GetKeyAsync(id);
        }
        
        public System.Data.DataTable Items() {
            return base.Channel.Items();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ItemsAsync() {
            return base.Channel.ItemsAsync();
        }
        
        public System.Data.DataTable Hospital_items() {
            return base.Channel.Hospital_items();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> Hospital_itemsAsync() {
            return base.Channel.Hospital_itemsAsync();
        }
        
        public System.Data.DataTable AllItems() {
            return base.Channel.AllItems();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> AllItemsAsync() {
            return base.Channel.AllItemsAsync();
        }
        
        public int SaveBarcode(int itemid, string code) {
            return base.Channel.SaveBarcode(itemid, code);
        }
        
        public System.Threading.Tasks.Task<int> SaveBarcodeAsync(int itemid, string code) {
            return base.Channel.SaveBarcodeAsync(itemid, code);
        }
        
        public System.Data.DataTable GetItem(string barcode) {
            return base.Channel.GetItem(barcode);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetItemAsync(string barcode) {
            return base.Channel.GetItemAsync(barcode);
        }
        
        public System.Data.DataTable GetPRStatus(int prid) {
            return base.Channel.GetPRStatus(prid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetPRStatusAsync(int prid) {
            return base.Channel.GetPRStatusAsync(prid);
        }
        
        public System.Data.DataTable GetPR(int officeid, int cyear) {
            return base.Channel.GetPR(officeid, cyear);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetPRAsync(int officeid, int cyear) {
            return base.Channel.GetPRAsync(officeid, cyear);
        }
        
        public string PRStatus(int prid) {
            return base.Channel.PRStatus(prid);
        }
        
        public System.Threading.Tasks.Task<string> PRStatusAsync(int prid) {
            return base.Channel.PRStatusAsync(prid);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IMS.epsws.GetUpdatesResponse IMS.epsws.serviceSoap.GetUpdates(IMS.epsws.GetUpdatesRequest request) {
            return base.Channel.GetUpdates(request);
        }
        
        public void GetUpdates(string fileName, string contentType, byte[] bytes) {
            IMS.epsws.GetUpdatesRequest inValue = new IMS.epsws.GetUpdatesRequest();
            inValue.fileName = fileName;
            inValue.contentType = contentType;
            inValue.bytes = bytes;
            IMS.epsws.GetUpdatesResponse retVal = ((IMS.epsws.serviceSoap)(this)).GetUpdates(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<IMS.epsws.GetUpdatesResponse> IMS.epsws.serviceSoap.GetUpdatesAsync(IMS.epsws.GetUpdatesRequest request) {
            return base.Channel.GetUpdatesAsync(request);
        }
        
        public System.Threading.Tasks.Task<IMS.epsws.GetUpdatesResponse> GetUpdatesAsync(string fileName, string contentType, byte[] bytes) {
            IMS.epsws.GetUpdatesRequest inValue = new IMS.epsws.GetUpdatesRequest();
            inValue.fileName = fileName;
            inValue.contentType = contentType;
            inValue.bytes = bytes;
            return ((IMS.epsws.serviceSoap)(this)).GetUpdatesAsync(inValue);
        }
        
        public void SaveDocument(int officeid, string subject, int eid, string uniquerefno) {
            base.Channel.SaveDocument(officeid, subject, eid, uniquerefno);
        }
        
        public System.Threading.Tasks.Task SaveDocumentAsync(int officeid, string subject, int eid, string uniquerefno) {
            return base.Channel.SaveDocumentAsync(officeid, subject, eid, uniquerefno);
        }
        
        public System.Data.DataTable GetPRStatusdate(int year) {
            return base.Channel.GetPRStatusdate(year);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetPRStatusdateAsync(int year) {
            return base.Channel.GetPRStatusdateAsync(year);
        }
        
        public System.Data.DataTable PPMPUtilization(int cyear) {
            return base.Channel.PPMPUtilization(cyear);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> PPMPUtilizationAsync(int cyear) {
            return base.Channel.PPMPUtilizationAsync(cyear);
        }
        
        public System.Data.DataTable TransmittalAction(int officeid) {
            return base.Channel.TransmittalAction(officeid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> TransmittalActionAsync(int officeid) {
            return base.Channel.TransmittalActionAsync(officeid);
        }
        
        public System.Data.DataTable NewTransmittal(int trailid, int officeid, int eid) {
            return base.Channel.NewTransmittal(trailid, officeid, eid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> NewTransmittalAsync(int trailid, int officeid, int eid) {
            return base.Channel.NewTransmittalAsync(trailid, officeid, eid);
        }
        
        public System.Data.DataTable AddTransmittalTransaction(int transid, string uniquerefno, int poid) {
            return base.Channel.AddTransmittalTransaction(transid, uniquerefno, poid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> AddTransmittalTransactionAsync(int transid, string uniquerefno, int poid) {
            return base.Channel.AddTransmittalTransactionAsync(transid, uniquerefno, poid);
        }
        
        public string DeleteTransmittalTransaction(int transdetailsid) {
            return base.Channel.DeleteTransmittalTransaction(transdetailsid);
        }
        
        public System.Threading.Tasks.Task<string> DeleteTransmittalTransactionAsync(int transdetailsid) {
            return base.Channel.DeleteTransmittalTransactionAsync(transdetailsid);
        }
        
        public string SendTransmittal(int transid, int eid) {
            return base.Channel.SendTransmittal(transid, eid);
        }
        
        public System.Threading.Tasks.Task<string> SendTransmittalAsync(int transid, int eid) {
            return base.Channel.SendTransmittalAsync(transid, eid);
        }
        
        public System.Data.DataTable ViewTransmittal(string transactionno, int officeid) {
            return base.Channel.ViewTransmittal(transactionno, officeid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ViewTransmittalAsync(string transactionno, int officeid) {
            return base.Channel.ViewTransmittalAsync(transactionno, officeid);
        }
        
        public System.Data.DataTable ViewTransmittalTransactions(string transid) {
            return base.Channel.ViewTransmittalTransactions(transid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ViewTransmittalTransactionsAsync(string transid) {
            return base.Channel.ViewTransmittalTransactionsAsync(transid);
        }
        
        public string ReceiveTransmittal(int transid, string eid, string data) {
            return base.Channel.ReceiveTransmittal(transid, eid, data);
        }
        
        public System.Threading.Tasks.Task<string> ReceiveTransmittalAsync(int transid, string eid, string data) {
            return base.Channel.ReceiveTransmittalAsync(transid, eid, data);
        }
        
        public System.Data.DataSet ViewTransmittalInfo(string transactionno) {
            return base.Channel.ViewTransmittalInfo(transactionno);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ViewTransmittalInfoAsync(string transactionno) {
            return base.Channel.ViewTransmittalInfoAsync(transactionno);
        }
        
        public System.Data.DataTable ReceivedTransmittal(int officeid) {
            return base.Channel.ReceivedTransmittal(officeid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ReceivedTransmittalAsync(int officeid) {
            return base.Channel.ReceivedTransmittalAsync(officeid);
        }
        
        public string UpdateTransactionRemarks(int transdetailsid, string remarks, int eid) {
            return base.Channel.UpdateTransactionRemarks(transdetailsid, remarks, eid);
        }
        
        public System.Threading.Tasks.Task<string> UpdateTransactionRemarksAsync(int transdetailsid, string remarks, int eid) {
            return base.Channel.UpdateTransactionRemarksAsync(transdetailsid, remarks, eid);
        }
        
        public string CheckSent(string transactionno) {
            return base.Channel.CheckSent(transactionno);
        }
        
        public System.Threading.Tasks.Task<string> CheckSentAsync(string transactionno) {
            return base.Channel.CheckSentAsync(transactionno);
        }
        
        public string CancelTransmittal(int transid) {
            return base.Channel.CancelTransmittal(transid);
        }
        
        public System.Threading.Tasks.Task<string> CancelTransmittalAsync(int transid) {
            return base.Channel.CancelTransmittalAsync(transid);
        }
        
        public System.Data.DataTable GetOffices() {
            return base.Channel.GetOffices();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetOfficesAsync() {
            return base.Channel.GetOfficesAsync();
        }
        
        public System.Data.DataTable GetOfficePR(int officeid, int cyear) {
            return base.Channel.GetOfficePR(officeid, cyear);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetOfficePRAsync(int officeid, int cyear) {
            return base.Channel.GetOfficePRAsync(officeid, cyear);
        }
        
        public System.Data.DataTable GetOfficePrLot(int prid) {
            return base.Channel.GetOfficePrLot(prid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetOfficePrLotAsync(int prid) {
            return base.Channel.GetOfficePrLotAsync(prid);
        }
        
        public System.Data.DataSet GetPRDetails(int prid) {
            return base.Channel.GetPRDetails(prid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetPRDetailsAsync(int prid) {
            return base.Channel.GetPRDetailsAsync(prid);
        }
        
        public System.Data.DataTable GetPRLotDetails(int prid, int lot) {
            return base.Channel.GetPRLotDetails(prid, lot);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetPRLotDetailsAsync(int prid, int lot) {
            return base.Channel.GetPRLotDetailsAsync(prid, lot);
        }
        
        public string AddBidderToPR(int prid, int supplierid) {
            return base.Channel.AddBidderToPR(prid, supplierid);
        }
        
        public System.Threading.Tasks.Task<string> AddBidderToPRAsync(int prid, int supplierid) {
            return base.Channel.AddBidderToPRAsync(prid, supplierid);
        }
        
        public System.Data.DataTable BidDocs() {
            return base.Channel.BidDocs();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> BidDocsAsync() {
            return base.Channel.BidDocsAsync();
        }
        
        public System.Data.DataTable PostQuaPR() {
            return base.Channel.PostQuaPR();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> PostQuaPRAsync() {
            return base.Channel.PostQuaPRAsync();
        }
        
        public System.Data.DataTable GetSuppliers() {
            return base.Channel.GetSuppliers();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetSuppliersAsync() {
            return base.Channel.GetSuppliersAsync();
        }
        
        public string SetSupplierID(int epssupplierid, int aomssupplierid) {
            return base.Channel.SetSupplierID(epssupplierid, aomssupplierid);
        }
        
        public System.Threading.Tasks.Task<string> SetSupplierIDAsync(int epssupplierid, int aomssupplierid) {
            return base.Channel.SetSupplierIDAsync(epssupplierid, aomssupplierid);
        }
        
        public System.Data.DataTable SupplierPO() {
            return base.Channel.SupplierPO();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> SupplierPOAsync() {
            return base.Channel.SupplierPOAsync();
        }
        
        public System.Data.DataTable PPMPRating(int cyear) {
            return base.Channel.PPMPRating(cyear);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> PPMPRatingAsync(int cyear) {
            return base.Channel.PPMPRatingAsync(cyear);
        }
        
        public void UpdateStatusTracking(int id, System.DateTime date, string dvno, string obrno) {
            base.Channel.UpdateStatusTracking(id, date, dvno, obrno);
        }
        
        public System.Threading.Tasks.Task UpdateStatusTrackingAsync(int id, System.DateTime date, string dvno, string obrno) {
            return base.Channel.UpdateStatusTrackingAsync(id, date, dvno, obrno);
        }
        
        public void UpdateStatusCafoa(string po) {
            base.Channel.UpdateStatusCafoa(po);
        }
        
        public System.Threading.Tasks.Task UpdateStatusCafoaAsync(string po) {
            return base.Channel.UpdateStatusCafoaAsync(po);
        }
        
        public System.Data.DataTable GetUndeliveredPO(int supplierid) {
            return base.Channel.GetUndeliveredPO(supplierid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetUndeliveredPOAsync(int supplierid) {
            return base.Channel.GetUndeliveredPOAsync(supplierid);
        }
        
        public System.Data.DataTable pritems() {
            return base.Channel.pritems();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> pritemsAsync() {
            return base.Channel.pritemsAsync();
        }
        
        public string updateitemchartcode(int itemid, string code) {
            return base.Channel.updateitemchartcode(itemid, code);
        }
        
        public System.Threading.Tasks.Task<string> updateitemchartcodeAsync(int itemid, string code) {
            return base.Channel.updateitemchartcodeAsync(itemid, code);
        }
        
        public System.Data.DataTable PriceBulletin() {
            return base.Channel.PriceBulletin();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> PriceBulletinAsync() {
            return base.Channel.PriceBulletinAsync();
        }
        
        public System.Data.DataTable ItemCategory() {
            return base.Channel.ItemCategory();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ItemCategoryAsync() {
            return base.Channel.ItemCategoryAsync();
        }
        
        public string updateCategoryAccountCode(int itemgroupid, string code) {
            return base.Channel.updateCategoryAccountCode(itemgroupid, code);
        }
        
        public System.Threading.Tasks.Task<string> updateCategoryAccountCodeAsync(int itemgroupid, string code) {
            return base.Channel.updateCategoryAccountCodeAsync(itemgroupid, code);
        }
        
        public System.Data.DataTable GetAllPRByYear(int cyear) {
            return base.Channel.GetAllPRByYear(cyear);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllPRByYearAsync(int cyear) {
            return base.Channel.GetAllPRByYearAsync(cyear);
        }
        
        public System.Data.DataTable GetAllSupplier(int supplierid) {
            return base.Channel.GetAllSupplier(supplierid);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllSupplierAsync(int supplierid) {
            return base.Channel.GetAllSupplierAsync(supplierid);
        }
        
        public System.Data.DataTable GetTananSupplier() {
            return base.Channel.GetTananSupplier();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetTananSupplierAsync() {
            return base.Channel.GetTananSupplierAsync();
        }
        
        public System.Data.DataTable GetAllFund() {
            return base.Channel.GetAllFund();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllFundAsync() {
            return base.Channel.GetAllFundAsync();
        }
        
        public System.Data.DataTable GetAllUnit() {
            return base.Channel.GetAllUnit();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetAllUnitAsync() {
            return base.Channel.GetAllUnitAsync();
        }
        
        public string CopyLatestDoc(int doc_id, int sig_id, int sig_eid) {
            return base.Channel.CopyLatestDoc(doc_id, sig_id, sig_eid);
        }
        
        public System.Threading.Tasks.Task<string> CopyLatestDocAsync(int doc_id, int sig_id, int sig_eid) {
            return base.Channel.CopyLatestDocAsync(doc_id, sig_id, sig_eid);
        }
        
        public string updateDocRouteDate(int doc_id, int sig_id, int sig_eid) {
            return base.Channel.updateDocRouteDate(doc_id, sig_id, sig_eid);
        }
        
        public System.Threading.Tasks.Task<string> updateDocRouteDateAsync(int doc_id, int sig_id, int sig_eid) {
            return base.Channel.updateDocRouteDateAsync(doc_id, sig_id, sig_eid);
        }
        
        public string AddAttendance(string swipeid, int iscompany, string attendee) {
            return base.Channel.AddAttendance(swipeid, iscompany, attendee);
        }
        
        public System.Threading.Tasks.Task<string> AddAttendanceAsync(string swipeid, int iscompany, string attendee) {
            return base.Channel.AddAttendanceAsync(swipeid, iscompany, attendee);
        }
        
        public System.Data.DataTable GetDocRoute(string funds, string ttype, double amount, string mode, string branch) {
            return base.Channel.GetDocRoute(funds, ttype, amount, mode, branch);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetDocRouteAsync(string funds, string ttype, double amount, string mode, string branch) {
            return base.Channel.GetDocRouteAsync(funds, ttype, amount, mode, branch);
        }
        
        public System.Data.DataTable PO_hospital() {
            return base.Channel.PO_hospital();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> PO_hospitalAsync() {
            return base.Channel.PO_hospitalAsync();
        }
    }
}
